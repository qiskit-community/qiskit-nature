# This code is part of Qiskit.
#
# (C) Copyright IBM 2021.
#
# This code is licensed under the Apache License, Version 2.0. You may
# obtain a copy of this license in the LICENSE.txt file in the root directory
# of this source tree or at http://www.apache.org/licenses/LICENSE-2.0.
#
# Any modifications or derivative works of this code must retain this
# copyright notice, and modified files need to carry a notice indicating
# that they have been altered from the originals.

name: Nature Unit Tests

on:
  push:
    branches:
      - main
      - 'stable/**'
  pull_request:
    branches:
      - main
      - 'stable/**'
  schedule:
    # run every day at 1AM
    - cron: '0 1 * * *'

concurrency:
  group: ${{ github.repository }}-${{ github.ref }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  Checks:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7]
    steps:
      - name: Print Concurrency Group
        env:
          CONCURRENCY_GROUP: ${{ github.repository }}-${{ github.ref }}-${{ github.head_ref }}
        run: |
          echo -e "\033[31;1;4mConcurrency Group\033[0m"
          echo -e "$CONCURRENCY_GROUP\n"
        shell: bash
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: ./.github/actions/install-main-dependencies
        with:
          os: ${{ matrix.os }}
        if: ${{ !startsWith(github.ref, 'refs/heads/stable') && !startsWith(github.base_ref, 'stable/') }}
      - uses: ./.github/actions/install-nature
      - name: Install Dependencies
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate
          pip install jupyter sphinx_rtd_theme 'matplotlib<3.3.0' qiskit-terra[visualization]
          sudo apt-get install -y pandoc graphviz
          sudo apt-get -y install python3-enchant
          sudo apt-get -y install hunspell-en-us
          pip install pyenchant
        shell: bash
      - name: PIP Check
        run:  |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate
          pip check
        if: ${{ !cancelled() }}
        shell: bash
      - name: Copyright Check
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate
          make copyright
        if: ${{ !cancelled() }}
        shell: bash
      - name: Spell Check
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate
          make spell
        if: ${{ !cancelled() }}
        shell: bash
      - name: Style Check
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate
          make style
        if: ${{ !cancelled() }}
        shell: bash
      - name: Run make html
        run:  |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate
          make clean_sphinx
          make html SPHINXOPTS=-W
          cd docs/_build/html
          mkdir artifacts
          tar -zcvf artifacts/documentation.tar.gz --exclude=./artifacts .
        if: ${{ !cancelled() }}
        shell: bash
      - name: Run upload documentation
        uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: docs/_build/html/artifacts/documentation.tar.gz
        if: ${{ !cancelled() }}
      - name: Doctest
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate
          make doctest
        if: ${{ !cancelled() }}
        shell: bash
  Nature:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
        include:
          - os: macos-latest
            python-version: 3.8
          - os: windows-latest
            python-version: 3.8
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: ./.github/actions/install-psi4
        with:
          os: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}
      - uses: ./.github/actions/install-main-dependencies
        with:
          os: ${{ matrix.os }}
        if: ${{ !startsWith(github.ref, 'refs/heads/stable') && !startsWith(github.base_ref, 'stable/') }}
      - uses: ./.github/actions/install-nature
      - name: Install Dependencies
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            conda install -c rpmuller pyquante2_pure
          else
            pip install -U Cython
            pip install git+https://github.com/rpmuller/pyquante2
          fi
        if: ${{ matrix.python-version < 3.9 }}
        shell: bash
      - name: Run lint
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate
          make lint
        shell: bash
      - name: Run mypy
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate
          make mypy
        if: ${{ !cancelled() }}
        shell: bash
      - name: Run lint latest version
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate
          pip install -U pylint
          make lint
        shell: bash
      - name: Nature Unit Tests under Python ${{ matrix.python-version }}
        uses: ./.github/actions/run-tests
        with:
          event-name: ${{ github.event_name }}
          run-slow: ${{ contains(github.event.pull_request.labels.*.name, 'run_slow') }}
          python-version: ${{ matrix.python-version }}
        if: ${{ !cancelled() }}
      - name: Deprecation Messages
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate
          mkdir ./ci-artifact-data
          python tools/extract_deprecation.py -file out.txt -output ./ci-artifact-data/nat.dep
        shell: bash
      - name: Coverage combine
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate
          coverage3 combine
          mv .coverage ./ci-artifact-data/nat.dat
        if: ${{ matrix.python-version == 3.7 }}
        shell: bash
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.python-version }}
          path: ./ci-artifact-data/*
  Tutorials:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: ./.github/actions/install-main-dependencies
        with:
          os: ${{ matrix.os }}
        if: ${{ !startsWith(github.ref, 'refs/heads/stable') && !startsWith(github.base_ref, 'stable/') }}
      - uses: ./.github/actions/install-nature
      - name: Install Dependencies
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate
          pip install jupyter sphinx_rtd_theme 'matplotlib<3.3.0' qiskit-terra[visualization]
          sudo apt-get install -y pandoc graphviz
        shell: bash
      - name: Run Qiskit Nature Tutorials
        env:
          QISKIT_PARALLEL: False
          QISKIT_DOCS_BUILD_TUTORIALS: 'always'
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate
          make html SPHINXOPTS=-W
          cd docs/_build/html
          mkdir artifacts
          tar -zcvf artifacts/tutorials.tar.gz --exclude=./artifacts .
        shell: bash
      - name: Run upload tutorials
        uses: actions/upload-artifact@v2
        with:
          name: tutorials${{ matrix.python-version }}
          path: docs/_build/html/artifacts/tutorials.tar.gz
      - name: Run stable tutorials
        env:
          QISKIT_PARALLEL: False
          QISKIT_DOCS_BUILD_TUTORIALS: 'always'
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate
          # clean last sphinx output
          make clean_sphinx
          # get current version
          version=$(pip show qiskit-nature | awk -F. '/^Version:/ { print substr($1,10), $2-1 }' OFS=.)
          # download stable version
          wget https://codeload.github.com/Qiskit/qiskit-nature/zip/stable/$version -O /tmp/repo.zip
          unzip /tmp/repo.zip -d /tmp/
          # copy stable tutorials to main tutorials
          rm -rf docs/tutorials/*
          cp -R /tmp/qiskit-nature-stable-$version/docs/tutorials/* docs/tutorials
          # run tutorials and zip results
          make html SPHINXOPTS=-W
          cd docs/_build/html
          mkdir artifacts
          tar -zcvf artifacts/tutorials.tar.gz --exclude=./artifacts .
        if: ${{ matrix.python-version == 3.8 && !startsWith(github.ref, 'refs/heads/stable') && !startsWith(github.base_ref, 'stable/') }}
        shell: bash
      - name: Run upload stable tutorials
        uses: actions/upload-artifact@v2
        with:
          name: tutorials-stable${{ matrix.python-version }}
          path: docs/_build/html/artifacts/tutorials.tar.gz
        if: ${{ matrix.python-version == 3.8 && !startsWith(github.ref, 'refs/heads/stable') && !startsWith(github.base_ref, 'stable/') }}
  Deprecation_Messages_and_Coverage:
    needs: [Nature]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest-3.6
          path: /tmp/u36
      - uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest-3.7
          path: /tmp/u37
      - uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest-3.8
          path: /tmp/u38
      - uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest-3.9
          path: /tmp/u39
      - uses: actions/download-artifact@v2
        with:
          name: macos-latest-3.8
          path: /tmp/m38
      - uses: actions/download-artifact@v2
        with:
          name: windows-latest-3.8
          path: /tmp/w38
      - name: Install Dependencies
        run: pip install -U coverage coveralls diff-cover
        shell: bash
      - name: Combined Deprecation Messages
        run: |
          sort -f -u /tmp/u36/nat.dep /tmp/u37/nat.dep /tmp/u38/nat.dep /tmp/u39/nat.dep /tmp/m38/nat.dep /tmp/w38/nat.dep || true
        shell: bash
      - name: Coverage combine
        run: coverage3 combine /tmp/u37/nat.dat
        shell: bash
      - name: Upload to Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: coveralls --service=github
        shell: bash
